package com.example.scheduleapp;

import static android.content.ContentValues.TAG;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.material.textfield.TextInputEditText;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;

public class Login extends AppCompatActivity {

    TextInputEditText editTextEmail, editTextPassword;
    Button buttonLogin;
    FirebaseAuth mAuth;
    ProgressBar progressBar;
    TextView textView;

    @Override
    public void onStart() {
        super.onStart();
        // Check if user is signed in (non-null) and update UI accordingly.
        FirebaseUser currentUser = mAuth.getCurrentUser();
        if (currentUser != null) {
            checkAdminStatus(currentUser);
        }
    }

    private void checkAdminStatus(FirebaseUser user) {
        // Make sure the user exists and isn't Null
        if (user != null) {
            // Get an instance of the FirebaseFirestore Database
            FirebaseFirestore db = FirebaseFirestore.getInstance();
            // Create a user document variable to hold the current user's User document.
            // The docuements are organized by Uid which is the same Uid.
            // The Uid is generated by Firebase Authentication as part of the registration process
            DocumentReference userRef = db.collection("Users").document(user.getUid());
            // The line below creates an asynchronous task that alerts the main UI thread when the
            // query is complete.
            userRef.get().addOnCompleteListener(task -> {
                if (task.isSuccessful()) {
                    DocumentSnapshot document = task.getResult();
                    if (document.exists()) {
                        // If the task is complete and the user document exists
                        // the next step is to determine if the user is an Admin
                        // each User has an "isAdmin" field which defaults as "N"
                        String isAdmin = document.getString("isAdmin");
                        // Create an intent
                        Intent intent;
                        if (isAdmin != null && isAdmin.equals("Y")) {
                            // User is an admin, open admin_main_activity
                            intent = new Intent(getApplicationContext(), AdminMainActivity.class);
                        } else {
                            // User is not an admin, open MainActivity
                            intent = new Intent(getApplicationContext(), MainActivity.class);
                        }
                        startActivity(intent);
                        finish();
                    } else {
                        Log.d(TAG, "No such document");
                        // Handle the case where the user document doesn't exist
                    }
                } else {
                    Log.d(TAG, "get failed with ", task.getException());
                    // Handle exceptions or errors
                }
            });
        } else {
            Log.d("Failure", "User is NULL");
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_login);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        textView = findViewById(R.id.RegisterNow);
        progressBar = findViewById(R.id.progressBar);
        mAuth = FirebaseAuth.getInstance();
        editTextEmail = findViewById(R.id.email);
        editTextPassword = findViewById(R.id.password);
        buttonLogin = findViewById(R.id.login_button);

        textView.setOnClickListener(v -> {
            Intent intent = new Intent(getApplicationContext(), Registration.class);
            startActivity(intent);
            finish();
        });

        buttonLogin.setOnClickListener(v -> {
            progressBar.setVisibility(View.VISIBLE);
            String email, password;
            email = String.valueOf(editTextEmail.getText());
            password = String.valueOf(editTextPassword.getText());

            if (TextUtils.isEmpty(email)) {
                Toast.makeText(Login.this, "Enter Email", Toast.LENGTH_LONG).show();
                return;
            }

            if (TextUtils.isEmpty(password)) {
                Toast.makeText(Login.this, "Enter Password", Toast.LENGTH_LONG).show();
                return;
            }
            mAuth.signInWithEmailAndPassword(email, password)
                    .addOnCompleteListener(task -> {
                        progressBar.setVisibility(View.GONE);
                        if (task.isSuccessful()) {
                            // Inside onComplete() method after successful login
                            FirebaseUser currentUser = mAuth.getCurrentUser();
                            if (currentUser != null) {
                                checkAdminStatus(currentUser); // Call the function to check admin status
                            } else {
                                Log.d("Failure", "User is NULL");
                            }
                        } else {
                            // If sign in fails, display a message to the user.
                            Log.w(TAG, "Login Failed, Please Check your Username and Password", task.getException());
                            Toast.makeText(Login.this, "Authentication failed.",
                                    Toast.LENGTH_SHORT).show();
                        }
                    });

        });
    }
}